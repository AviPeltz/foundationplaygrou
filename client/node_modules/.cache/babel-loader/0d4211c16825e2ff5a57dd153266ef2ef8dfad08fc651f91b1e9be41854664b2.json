{"ast":null,"code":"var _jsxFileName = \"/Users/avipeltz/Developer/100days/foundationPlayground/foundationplayground/src/components/NestedBS.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PlaceTree({\n  place\n}) {\n  const childPlaces = place.childPlaces;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [place.title, childPlaces.length > 0 && /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"list-decimal list-inside\",\n      children: childPlaces.map(place => /*#__PURE__*/_jsxDEV(PlaceTree, {\n        className: \"list-decimal list-inside\",\n        place: place\n      }, place.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this);\n}\n_c = PlaceTree;\nexport default function NestedBS() {\n  _s();\n  const [plan, setPlan] = useState(initialTravelPlan);\n  const planets = plan.childPlaces;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-semibold\",\n      children: \"Places to visit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"list-decimal\",\n      children: planets.map(place => /*#__PURE__*/_jsxDEV(PlaceTree, {\n        place: place\n      }, place.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(NestedBS, \"IkiTm5lcPrCI/rlS/X1a+e/J8G4=\");\n_c2 = NestedBS;\nexport const initialTravelPlan = {\n  id: 0,\n  title: '(Root)',\n  childPlaces: [{\n    id: 1,\n    title: 'Earth',\n    childPlaces: [{\n      id: 2,\n      title: 'Africa',\n      childPlaces: [{\n        id: 3,\n        title: 'Botswana',\n        childPlaces: []\n      }, {\n        id: 4,\n        title: 'Egypt',\n        childPlaces: []\n      }, {\n        id: 5,\n        title: 'Kenya',\n        childPlaces: []\n      }, {\n        id: 6,\n        title: 'Madagascar',\n        childPlaces: []\n      }, {\n        id: 7,\n        title: 'Morocco',\n        childPlaces: []\n      }, {\n        id: 8,\n        title: 'Nigeria',\n        childPlaces: []\n      }, {\n        id: 9,\n        title: 'South Africa',\n        childPlaces: []\n      }]\n    }, {\n      id: 10,\n      title: 'Americas',\n      childPlaces: [{\n        id: 11,\n        title: 'Argentina',\n        childPlaces: []\n      }, {\n        id: 12,\n        title: 'Brazil',\n        childPlaces: []\n      }, {\n        id: 13,\n        title: 'Barbados',\n        childPlaces: []\n      }, {\n        id: 14,\n        title: 'Canada',\n        childPlaces: []\n      }, {\n        id: 15,\n        title: 'Jamaica',\n        childPlaces: []\n      }, {\n        id: 16,\n        title: 'Mexico',\n        childPlaces: []\n      }, {\n        id: 17,\n        title: 'Trinidad and Tobago',\n        childPlaces: []\n      }, {\n        id: 18,\n        title: 'Venezuela',\n        childPlaces: []\n      }]\n    }, {\n      id: 19,\n      title: 'Asia',\n      childPlaces: [{\n        id: 20,\n        title: 'China',\n        childPlaces: []\n      }, {\n        id: 21,\n        title: 'India',\n        childPlaces: []\n      }, {\n        id: 22,\n        title: 'Singapore',\n        childPlaces: []\n      }, {\n        id: 23,\n        title: 'South Korea',\n        childPlaces: []\n      }, {\n        id: 24,\n        title: 'Thailand',\n        childPlaces: []\n      }, {\n        id: 25,\n        title: 'Vietnam',\n        childPlaces: []\n      }]\n    }, {\n      id: 26,\n      title: 'Europe',\n      childPlaces: [{\n        id: 27,\n        title: 'Croatia',\n        childPlaces: []\n      }, {\n        id: 28,\n        title: 'France',\n        childPlaces: []\n      }, {\n        id: 29,\n        title: 'Germany',\n        childPlaces: []\n      }, {\n        id: 30,\n        title: 'Italy',\n        childPlaces: []\n      }, {\n        id: 31,\n        title: 'Portugal',\n        childPlaces: []\n      }, {\n        id: 32,\n        title: 'Spain',\n        childPlaces: []\n      }, {\n        id: 33,\n        title: 'Turkey',\n        childPlaces: []\n      }]\n    }, {\n      id: 34,\n      title: 'Oceania',\n      childPlaces: [{\n        id: 35,\n        title: 'Australia',\n        childPlaces: []\n      }, {\n        id: 36,\n        title: 'Bora Bora (French Polynesia)',\n        childPlaces: []\n      }, {\n        id: 37,\n        title: 'Easter Island (Chile)',\n        childPlaces: []\n      }, {\n        id: 38,\n        title: 'Fiji',\n        childPlaces: []\n      }, {\n        id: 39,\n        title: 'Hawaii (the USA)',\n        childPlaces: []\n      }, {\n        id: 40,\n        title: 'New Zealand',\n        childPlaces: []\n      }, {\n        id: 41,\n        title: 'Vanuatu',\n        childPlaces: []\n      }]\n    }]\n  }, {\n    id: 42,\n    title: 'Moon',\n    childPlaces: [{\n      id: 43,\n      title: 'Rheita',\n      childPlaces: []\n    }, {\n      id: 44,\n      title: 'Piccolomini',\n      childPlaces: []\n    }, {\n      id: 45,\n      title: 'Tycho',\n      childPlaces: []\n    }]\n  }, {\n    id: 46,\n    title: 'Mars',\n    childPlaces: [{\n      id: 47,\n      title: 'Corn Town',\n      childPlaces: []\n    }, {\n      id: 48,\n      title: 'Green Hill',\n      childPlaces: []\n    }]\n  }]\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"PlaceTree\");\n$RefreshReg$(_c2, \"NestedBS\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","PlaceTree","place","childPlaces","children","title","length","className","map","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","NestedBS","_s","plan","setPlan","initialTravelPlan","planets","_c2","$RefreshReg$"],"sources":["/Users/avipeltz/Developer/100days/foundationPlayground/foundationplayground/src/components/NestedBS.js"],"sourcesContent":["import { useState } from \"react\";\n\n\nfunction PlaceTree({ place }){\n    const childPlaces = place.childPlaces;\n    return (\n      <li>\n        {place.title}\n        {childPlaces.length > 0 && (\n          <ol className=\"list-decimal list-inside\">\n            {childPlaces.map(place => (\n              <PlaceTree className=\"list-decimal list-inside\" key={place.id} place={place} />\n            ))}\n          </ol>\n        )}\n      </li>\n    );\n}\nexport default function NestedBS() {\n    const [plan, setPlan] = useState(initialTravelPlan);\n    const planets = plan.childPlaces;\n    return (\n      <>\n        <h2 className=\"text-lg font-semibold\">Places to visit</h2>\n        <ol className=\"list-decimal\">\n          {planets.map(place => (\n            <PlaceTree key={place.id} place={place} />\n          ))}\n        </ol>\n      </>\n    );\n}\n\n\nexport const initialTravelPlan = {\n    id: 0,\n    title: '(Root)',\n    childPlaces: [{\n      id: 1,\n      title: 'Earth',\n      childPlaces: [{\n        id: 2,\n        title: 'Africa',\n        childPlaces: [{\n          id: 3,\n          title: 'Botswana',\n          childPlaces: []\n        }, {\n          id: 4,\n          title: 'Egypt',\n          childPlaces: []\n        }, {\n          id: 5,\n          title: 'Kenya',\n          childPlaces: []\n        }, {\n          id: 6,\n          title: 'Madagascar',\n          childPlaces: []\n        }, {\n          id: 7,\n          title: 'Morocco',\n          childPlaces: []\n        }, {\n          id: 8,\n          title: 'Nigeria',\n          childPlaces: []\n        }, {\n          id: 9,\n          title: 'South Africa',\n          childPlaces: []\n        }]\n      }, {\n        id: 10,\n        title: 'Americas',\n        childPlaces: [{\n          id: 11,\n          title: 'Argentina',\n          childPlaces: []\n        }, {\n          id: 12,\n          title: 'Brazil',\n          childPlaces: []\n        }, {\n          id: 13,\n          title: 'Barbados',\n          childPlaces: []\n        }, {\n          id: 14,\n          title: 'Canada',\n          childPlaces: []\n        }, {\n          id: 15,\n          title: 'Jamaica',\n          childPlaces: []\n        }, {\n          id: 16,\n          title: 'Mexico',\n          childPlaces: []\n        }, {\n          id: 17,\n          title: 'Trinidad and Tobago',\n          childPlaces: []\n        }, {\n          id: 18,\n          title: 'Venezuela',\n          childPlaces: []\n        }]\n      }, {\n        id: 19,\n        title: 'Asia',\n        childPlaces: [{\n          id: 20,\n          title: 'China',\n          childPlaces: []\n        }, {\n          id: 21,\n          title: 'India',\n          childPlaces: []\n        }, {\n          id: 22,\n          title: 'Singapore',\n          childPlaces: []\n        }, {\n          id: 23,\n          title: 'South Korea',\n          childPlaces: []\n        }, {\n          id: 24,\n          title: 'Thailand',\n          childPlaces: []\n        }, {\n          id: 25,\n          title: 'Vietnam',\n          childPlaces: []\n        }]\n      }, {\n        id: 26,\n        title: 'Europe',\n        childPlaces: [{\n          id: 27,\n          title: 'Croatia',\n          childPlaces: [],\n        }, {\n          id: 28,\n          title: 'France',\n          childPlaces: [],\n        }, {\n          id: 29,\n          title: 'Germany',\n          childPlaces: [],\n        }, {\n          id: 30,\n          title: 'Italy',\n          childPlaces: [],\n        }, {\n          id: 31,\n          title: 'Portugal',\n          childPlaces: [],\n        }, {\n          id: 32,\n          title: 'Spain',\n          childPlaces: [],\n        }, {\n          id: 33,\n          title: 'Turkey',\n          childPlaces: [],\n        }]\n      }, {\n        id: 34,\n        title: 'Oceania',\n        childPlaces: [{\n          id: 35,\n          title: 'Australia',\n          childPlaces: [],\n        }, {\n          id: 36,\n          title: 'Bora Bora (French Polynesia)',\n          childPlaces: [],\n        }, {\n          id: 37,\n          title: 'Easter Island (Chile)',\n          childPlaces: [],\n        }, {\n          id: 38,\n          title: 'Fiji',\n          childPlaces: [],\n        }, {\n          id: 39,\n          title: 'Hawaii (the USA)',\n          childPlaces: [],\n        }, {\n          id: 40,\n          title: 'New Zealand',\n          childPlaces: [],\n        }, {\n          id: 41,\n          title: 'Vanuatu',\n          childPlaces: [],\n        }]\n      }]\n    }, {\n      id: 42,\n      title: 'Moon',\n      childPlaces: [{\n        id: 43,\n        title: 'Rheita',\n        childPlaces: []\n      }, {\n        id: 44,\n        title: 'Piccolomini',\n        childPlaces: []\n      }, {\n        id: 45,\n        title: 'Tycho',\n        childPlaces: []\n      }]\n    }, {\n      id: 46,\n      title: 'Mars',\n      childPlaces: [{\n        id: 47,\n        title: 'Corn Town',\n        childPlaces: []\n      }, {\n        id: 48,\n        title: 'Green Hill',\n        childPlaces: []      \n      }]\n    }]\n  };\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
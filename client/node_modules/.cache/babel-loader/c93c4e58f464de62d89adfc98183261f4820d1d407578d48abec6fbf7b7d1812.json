{"ast":null,"code":"var _jsxFileName = \"/Users/avipeltz/Developer/100days/foundationPlayground/foundationplayground/src/contexts/TaskContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContext = /*#__PURE__*/createContext(null);\nconst TaskDispatchContext = /*#__PURE__*/createContext(null);\nexport function TaskProvider({\n  children\n}) {\n  _s();\n  const [tasks, dispatch] = useReducer(taskReducer, initialTasks);\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: tasks,\n    children: /*#__PURE__*/_jsxDEV(TaskDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskProvider, \"/WXoOWA8jcmGw6IJvQ6lpVQrnbs=\");\n_c = TaskProvider;\nexport function useTasks() {\n  _s2();\n  return useContext(TaskContext);\n}\n_s2(useTasks, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction taskReducer(tasks, action) {\n  switch (action.type) {\n    case 'added':\n      {\n        return [...tasks, {\n          id: tasks.length,\n          text: action.text,\n          done: false\n        }];\n      }\n    case 'changed':\n      {\n        return tasks.map(t => {\n          if (t.id === action.id) {\n            return action.task;\n          } else {\n            return t;\n          }\n        });\n      }\n    case 'deleted':\n      {\n        return tasks.filter(t => t.id !== action.id);\n      }\n    default:\n      {\n        throw new Error('Unknown action type: ' + action.type);\n      }\n  }\n}\nconst initialTasks = [{\n  id: 0,\n  text: 'Philosopher’s Path',\n  done: true\n}, {\n  id: 1,\n  text: 'Visit the temple',\n  done: false\n}, {\n  id: 2,\n  text: 'Drink matcha',\n  done: false\n}];\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["createContext","useContext","useReducer","jsxDEV","_jsxDEV","TaskContext","TaskDispatchContext","TaskProvider","children","_s","tasks","dispatch","taskReducer","initialTasks","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTasks","_s2","action","type","id","length","text","done","map","t","task","filter","Error","$RefreshReg$"],"sources":["/Users/avipeltz/Developer/100days/foundationPlayground/foundationplayground/src/contexts/TaskContext.js"],"sourcesContent":["import { createContext, useContext, useReducer } from \"react\";\n\nconst TaskContext = createContext(null);\nconst TaskDispatchContext = createContext(null);\n\nexport function TaskProvider({ children }) {\n    const [tasks, dispatch] = useReducer(\n        taskReducer,\n        initialTasks\n    );\n\n    return (\n        <TaskContext.Provider value={tasks}>\n            <TaskDispatchContext.Provider \n                value={dispatch}\n            >\n                {children}\n            </TaskDispatchContext.Provider>\n        </TaskContext.Provider>\n    );\n}\nexport function useTasks(){\n    return useContext(TaskContext);\n}\n\nfunction taskReducer(tasks, action){\n    switch(action.type){\n        case 'added':{\n            return [...tasks, {\n                id: tasks.length,\n                text: action.text,\n                done: false\n            }];\n        }\n        case 'changed': {\n            return tasks.map(t => {\n                if (t.id === action.id) {\n                    return action.task;\n                }else{\n                    return t;\n                }\n            });\n        }\n        case 'deleted': {\n            return tasks.filter(t => t.id !== action.id);\n        }\n        default: {\n            throw new Error('Unknown action type: ' + action.type);\n        }\n    }\n}\n\nconst initialTasks = [\n    { id: 0, text: 'Philosopher’s Path', done: true },\n    { id: 1, text: 'Visit the temple', done: false },\n    { id: 2, text: 'Drink matcha', done: false }\n  ];"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,WAAW,gBAAGL,aAAa,CAAC,IAAI,CAAC;AACvC,MAAMM,mBAAmB,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAE/C,OAAO,SAASO,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,UAAU,CAChCU,WAAW,EACXC,YACJ,CAAC;EAED,oBACIT,OAAA,CAACC,WAAW,CAACS,QAAQ;IAACC,KAAK,EAAEL,KAAM;IAAAF,QAAA,eAC/BJ,OAAA,CAACE,mBAAmB,CAACQ,QAAQ;MACzBC,KAAK,EAAEJ,QAAS;MAAAH,QAAA,EAEfA;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACiB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAE/B;AAACV,EAAA,CAfeF,YAAY;AAAAa,EAAA,GAAZb,YAAY;AAgB5B,OAAO,SAASc,QAAQA,CAAA,EAAE;EAAAC,GAAA;EACtB,OAAOrB,UAAU,CAACI,WAAW,CAAC;AAClC;AAACiB,GAAA,CAFeD,QAAQ;AAIxB,SAAST,WAAWA,CAACF,KAAK,EAAEa,MAAM,EAAC;EAC/B,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,OAAO;MAAC;QACT,OAAO,CAAC,GAAGd,KAAK,EAAE;UACde,EAAE,EAAEf,KAAK,CAACgB,MAAM;UAChBC,IAAI,EAAEJ,MAAM,CAACI,IAAI;UACjBC,IAAI,EAAE;QACV,CAAC,CAAC;MACN;IACA,KAAK,SAAS;MAAE;QACZ,OAAOlB,KAAK,CAACmB,GAAG,CAACC,CAAC,IAAI;UAClB,IAAIA,CAAC,CAACL,EAAE,KAAKF,MAAM,CAACE,EAAE,EAAE;YACpB,OAAOF,MAAM,CAACQ,IAAI;UACtB,CAAC,MAAI;YACD,OAAOD,CAAC;UACZ;QACJ,CAAC,CAAC;MACN;IACA,KAAK,SAAS;MAAE;QACZ,OAAOpB,KAAK,CAACsB,MAAM,CAACF,CAAC,IAAIA,CAAC,CAACL,EAAE,KAAKF,MAAM,CAACE,EAAE,CAAC;MAChD;IACA;MAAS;QACL,MAAM,IAAIQ,KAAK,CAAC,uBAAuB,GAAGV,MAAM,CAACC,IAAI,CAAC;MAC1D;EACJ;AACJ;AAEA,MAAMX,YAAY,GAAG,CACjB;EAAEY,EAAE,EAAE,CAAC;EAAEE,IAAI,EAAE,oBAAoB;EAAEC,IAAI,EAAE;AAAK,CAAC,EACjD;EAAEH,EAAE,EAAE,CAAC;EAAEE,IAAI,EAAE,kBAAkB;EAAEC,IAAI,EAAE;AAAM,CAAC,EAChD;EAAEH,EAAE,EAAE,CAAC;EAAEE,IAAI,EAAE,cAAc;EAAEC,IAAI,EAAE;AAAM,CAAC,CAC7C;AAAC,IAAAR,EAAA;AAAAc,YAAA,CAAAd,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}